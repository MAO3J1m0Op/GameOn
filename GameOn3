using System; // Includes system namespace into program

namespace GameOn3 {
    
    // NOTE: public means other classes can access it.

    class hub { // The beloved login system (and menu)

        static void Main () { // In C#, this is the first function run. Notice how it is capitalized.
            functions f = new functions(); // Creates a new instance of the functions class and assigns it to variable 'f'. No variables will be saved when this is done. This allows me to access the methods from this class.

            string password; // Just like C++, all variables' type must be declared first.

            f.print("Enter a Username: "); // This was pulled from the functions class. The programmer must specify what class it is from, or the program will search for the function locally and fail.
            profile.name = f.input(); // Writing into a static variable from the profile class
            f.print("Enter the GameOn3 Password: ");
            password = f.input();
            if (password == "RIP GameOn2") { // If/else and else if works just like in C++.
                hub.menu(); // Runs menu from this class
            } else {
                f.print("Login Failed.");
            }
        }

        static void menu () { // This can only be accessed locally from a static method if this is too
            math math = new math();
            eightball eightball = new eightball();
            binary binary = new binary();
            dice dice = new dice();
            functions f = new functions();
            string run = null; // 'run' takes up no space.

            f.print("Login Successful\nWelcome, " + profile.name + "!"); // Reads 'name' out from profile class
            while (run != "exit") { // Whiles function just like in C++
                f.print("Enter run command\nType 'help' for more info:");
                run = f.input();
                switch (run) { // Switches also work just like in C++
                    case "help" : f.print("Current Functions:\n math: calculator and math quiz\n eightball: Magic 8 Ball\n binary: Number guessing program\n dice: Dice rolling program\n profile: view your profile"); break;
                    case "math" : math.main(); break;
                    case "eightball" :  eightball.main(); break;
                    case "binary" : binary.main(); break;
                    case "dice" : dice.main(); break;
                    case "profile" : profile.main(); break;
                }
            }
        }
    }
    
    public class math {
        
        public void main () { // Called main for my own reasoning, not the program's
            functions f = new functions();
            
            f.print("Run math.calculator or math.quiz?\n [1] math.calculator\n [2] math.quiz");
            globals.answer = f.input();
            switch (globals.answer) { // Reading answer from globals
                case "1" : calculator(); break;
                case "2" : quiz(); break;
            }
        }
        
        void calculator () {
            functions f = new functions();

            double a;
            double b;
            char operation;

            f.print("Enter first number:");
            a = Convert.ToDouble(f.input());
            f.print("Enter second number:");
            b = Convert.ToDouble(f.input());
            f.print("Enter operation:");
            operation = Convert.ToChar(f.input());
            switch (operation) {
                case '+' : f.print("Answer: " + Convert.ToString(a + b)); break; // Strings are spliced together like in Python.
                case '-' : f.print("Answer: " + Convert.ToString(a - b)); break;
                case '*' : f.print("Answer: " + Convert.ToString(a * b)); break;
                case '/' : f.print("Answer: " + Convert.ToString(a / b)); break;
            }
        }
        
        void quiz () {
            functions f = new functions();
            Random r = new System.Random(); // Creates new instance of random class from System namespace.
            
            int a;
            int b;
            double score = 0;
            const int qs = 5; // How many questions in the quiz. Cannot be modified outside of this line
            const int rngmax = 10; // Highest value of the RNG
            
            for (int n = 0;n < qs;++n) { // For loops are just like in C++
                a = r.Next(0,rngmax); // RNG at work
                b = r.Next(0,rngmax);
                f.print("Question " + Convert.ToString(n + 1) + ": " + Convert.ToString(a) + " + " + Convert.ToString(b) + " =");
                globals.intans = f.intput();
                if (a + b == globals.intans) {
                    f.print("Correct!");
                    ++score;
                } else {
                    f.print("Incorrect. The correct answer is " + Convert.ToString(a + b) + ".");
                }
            }
            f.print("Final Score: " + Convert.ToString(score) + "/" + Convert.ToString(qs) + "!\nThat\'s " + Convert.ToString(score / qs * 100) + "%!");
        }
    }
    
    public class eightball {
        public void main () {
            functions f = new functions();
            Random r = new System.Random();
            
            int choice;
            string question = null;
            
            while (question != "exit") {
                f.print("What is your question?");
                question = f.input();
                choice = r.Next(1,5);
                switch (choice) {
                    case 1 : f.print("Yes."); break;
                    case 2 : f.print("No."); break;
                    case 3 : f.print("It is certain."); break;
                    case 4 : f.print("Don't count on it"); break;
                    case 5 : f.print("Ask again later."); break;
                }
            }
        }
    }
    
    public class binary {
        const int topnum = 64;
        bool[] p = new bool[6];
        
        public void main () {
            functions f = new functions();
            
            f.print("Think of a number between 1 and " + Convert.ToString(topnum) + ".\nPress enter when you have it.");
            f.input();
            dispnums(1);
            f.print("Is you number listed above? (y/n):");
            p[0] = f.ynput();
            dispnums(2);
            f.print("Is your number listed above? (y/n):");
            p[1] = f.ynput();
            dispnums(4);
            f.print("Is your number listed above? (y/n):");
            p[2] = f.ynput();
            dispnums(8);
            f.print("Is your number listed above? (y/n):");
            p[3] = f.ynput();
            dispnums(16);
            f.print("Is your number listed above? (y/n):");
            p[4] = f.ynput();
            dispnums(32);
            f.print("Is your number listed above? (y/n):");
            p[5] = f.ynput();
            f.print("Is your number " + Convert.ToString(ti(p[5]) * 32 + ti(p[4]) * 16 + ti(p[3]) * 8 + ti(p[2]) * 4 + ti(p[1]) * 2 + ti(p[0]) + 1) + "?");
        }
        
        void dispnums (int place) {
            functions f = new functions();
            
            int plus = 0;
            
            for (int n = 0;n < topnum;++n) {
                if (plus == place * 2) {
                    plus = 0;
                } if (plus >= place) {
                    f.print(Convert.ToString(n + 1));
                }
                ++plus;
            }
        }
        
        int ti (bool value) {
            return Convert.ToInt32(value);
        }
    }
    
    public class dice {
        public void main () {
            functions f = new functions();
            Random r = new System.Random();
            
            int roll;
            int max;
            int qty;
            int total = 0;
            
            f.print("Enter the maximum value of the dice:");
            max = f.intput();
            f.print("Enter the number of dice you would like to roll:");
            qty = f.intput();
            f.print("Results:");
            for (int n = 0;n < qty;++n) {
                roll = r.Next(1,max + 1);
                Console.WriteLine("  {0}", roll);
                total += roll;
            }
            Console.WriteLine(" Total: {0}", total);
        }
    }
    
    public static class profile {
        public static string name; // Valie can be accessed through other classes
        static string fname = null; // These don't reset
        static string lname = null;
        static string bio = null;
        public static void main () {
            functions f = new functions();
            
            bool run = true; // This resets every time this function is called.
            
            while (run == true) {
                f.print("Profile:\n [1] Name: " + fname + " " + lname + "\n [2] Username: " + name + "\n [3] Bio: " + bio + "\n [0] exit");
                globals.answer = f.input();
                switch (globals.answer) {
                    case "1" : f.print("First Name:"); fname = f.input(); f.print("Last Name:"); lname = f.input(); break;
                    case "2" : f.print("Username:");
                        name = f.input(); break;
                    case "3" : f.print("Bio:"); bio = f.input(); break;
                    case "0" : run = false; break;
                }
            }
        }
    }

    public static class globals { // Notice how this class and all its members are labeled static.
        public static string answer;
        public static int intans;
    }

    public class functions {
        
        public void print (string value) { // Functions and parameters are just like C++
            Console.WriteLine(value); // Always begins new line at the end.
        }
        
        public string input () {
            return Console.ReadLine(); // getline() but better
        }
        
        public int intput () {
            return Convert.ToInt32(Console.ReadLine()); // Takes string input and converts it to an int.
        }
        
        public bool ynput () {
            string yn;
            while (true) {
                yn = Console.ReadLine();
                if (yn == "y") {
                return true;
                } else if (yn == "n") {
            return false;
                } else {
                Console.WriteLine("ERROR: Expecting \'y\' or \'n\', got {0}.", yn); // This works as well for string splicing.
                }
            }
        }
    }
}
